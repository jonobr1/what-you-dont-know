{
	"config": {},
	"libraries": [
		"../release/third-party/WebAudio.js"
	],
	"includes": [
		[
			"AudioManager",
			[
				"function Track ( name, clips ) {",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"",
				"\tthis.index = 0;",
				"\tthis.name = name;",
				"\tthis.clips = clips;",
				"",
				"\tthis.node = ctx.createGain();",
				"\tthis.next();",
				"",
				"}",
				"",
				"Track.prototype.start = function ( startTime ) {",
				"",
				"\tif ( !this.current ) {",
				"\t\treturn;",
				"\t}",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"\tthis.current.cue( startTime || 0, 'play' );",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"Track.prototype.stop = function ( endTime ) {",
				"",
				"\tif ( !this.current ) {",
				"\t\treturn this;",
				"\t}",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"\tthis.current.cue( endTime || 0, 'pause' );",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"Track.prototype.next = function () {",
				"",
				"\tthis.current = this.clips[ this.index ];",
				"\tthis.index = ( this.index + 1 ) % this.clips.length;",
				"",
				"\treturn this.current;",
				"",
				"};",
				"",
				"Track.prototype.transition = function ( time ) {",
				"",
				"\tthis.stop( time );",
				"\tthis.next();",
				"\tthis.start( time );",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"function AudioManager ( bpm, bars ) {",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"",
				"\tif ( /number/i.test( typeof bpm ) ) {",
				"\t\tthis.bpm = bpm;",
				"\t}",
				"\tif ( /number/i.test( typeof bars ) ) {",
				"\t\tthis.bars = bars;",
				"\t}",
				"",
				"\tthis.tracks = [];",
				"\tthis.clips = [];",
				"",
				"\tthis.destination = ctx.createGain();",
				"\tthis.master = ctx.createGain();",
				"\tthis.master.connect( ctx.destination );",
				"",
				"}",
				"",
				"AudioManager.Track = Track;",
				"",
				"AudioManager.prototype.startTime = null;",
				"AudioManager.prototype.bpm = 90;",
				"AudioManager.prototype.bars = 10;",
				"AudioManager.prototype.isPlaying = false;",
				"AudioManager.prototype.started = false;",
				"",
				"AudioManager.prototype.addTrack = function ( name, clips ) {",
				"",
				"\tvar track = new Track( name, clips );",
				"\ttrack.node.connect( this.destination );",
				"\t",
				"\tfor ( var i = 0; i < clips.length; i++ ) {",
				"\t\tvar clip = clips[ i ];",
				"\t\tclip.connect( track.node );",
				"\t}",
				"\t",
				"\tthis.tracks.push( track );",
				"\tthis.clips.concat( clips );",
				"",
				"\treturn track;",
				"",
				"};",
				"",
				"AudioManager.prototype.start = function () {",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"\tthis.isPlaying = true;",
				"",
				"\tif ( !this.started ) {",
				"",
				"\t\tthis.startTime = ctx.currentTime;",
				"",
				"\t\tfor ( var i = 0; i < this.tracks.length; i++ ) {",
				"\t\t\tthis.tracks[ i ].start();",
				"\t\t}",
				"",
				"\t\tthis.destination.connect( this.master );",
				"",
				"\t}",
				"\t",
				"\tthis.destination.gain.value = 1;",
				"\tthis.started = true;",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"AudioManager.prototype.stop = function () {",
				"",
				"\tvar ctx = WebAudio.getContext();",
				"\tthis.isPlaying = false;",
				"",
				"\tthis.destination.gain.value = 0;",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"AudioManager.prototype.getDuration = function () {",
				"\treturn 4 * this.bars * ( 60 / this.bpm );",
				"};",
				"",
				"AudioManager.prototype.update = function () {",
				"",
				"\treturn this;",
				"",
				"};",
				"",
				"resources.set( 'AudioManager', AudioManager );"
			]
		],
		[
			"AudioSetup",
			[
				"var AudioManager = resources.get( 'AudioManager' );",
				"",
				"var tracks = [",
				"\t'vocals', 'machine-drum', 'instrumental',",
				"\t'melody', 'blips', 'sub-tone', 'sfx',",
				"\t'summation'",
				"];",
				"",
				"/**",
				" * An array describing what audio clips exist for",
				" * each track at every section of the \"song\". `false`",
				" * means there isn't a clip available for that section.",
				" * `true` means there is a clip available and its",
				" * filename corresponds to the sections array. Finally,",
				" * a String represents the exact base filename to be",
				" * used to select the specific clip.",
				" */",
				"tracks.data = {",
				"\t'vocals': [",
				"\t\tfalse, true, true, true, true, true, true ],",
				"\t'machine-drum': [",
				"\t\ttrue, true, true, true, 'chorus', 'breakdown', true ],",
				"\t'instrumental': [",
				"\t\tfalse, true, true, true, 'chorus', 'breakdown', true ],",
				"\t'melody': [",
				"\t\ttrue, true, true, true, 'chorus', 'breakdown', true ],",
				"\t'blips': [",
				"\t\tfalse, false, false, true, true, true, false ],",
				"\t'sub-tone': [",
				"\t\tfalse, true, true, true, 'chorus', 'breakdown', true ],",
				"\t'sfx': [",
				"\t\ttrue, false, false, true, true, true, true ],",
				"\t'summation': [",
				"\t\ttrue, true, true, true, 'chorus', 'breakdown', true ]",
				"};",
				"",
				"var sections = [",
				"\t'intro', 'verse-1', 'verse-2', 'chorus',",
				"\t'verse-3', 'verse-4', 'breakdown'",
				"];",
				"",
				"sections.data = {};",
				"",
				"var manager = new AudioManager();",
				"",
				"var ua = navigator.userAgent;",
				"var isSafari = !!ua.match(/Safari/ig) && !ua.match(/Chrome/ig);",
				"var ctx = WebAudio.getContext();",
				"var extension = isSafari ? 'mp3' : 'ogg';",
				"",
				"for ( var name in tracks.data ) {",
				"",
				"\tvar clips = tracks.data[ name ];",
				"\tvar sounds = []",
				"",
				"\tfor ( var i = 0; i < clips.length; i++ ) {",
				"",
				"\t\tvar section = clips[ i ];",
				"",
				"\t\tif ( section === true ) {",
				"\t\t\tsection = sections[ i ];",
				"\t\t}",
				"",
				"\t\tvar url = '../assets/v1/' + section + '-' + name + '.' + extension;",
				"\t\tvar sound = new WebAudio();",
				"\t\tif ( section ) {",
				"\t\t\tsound.src = url;",
				"\t\t}",
				"\t\tsound.loop = true;",
				"",
				"\t\tsounds.push( sound );",
				"",
				"\t}",
				"",
				"\tmanager.addTrack( name, sounds );",
				"",
				"}",
				"",
				"resources.set( 'audio-manager', manager );"
			]
		]
	],
	"effects": [
		[
			"Initialize Audio",
			[
				"var manager = resources.get( 'audio-manager' );",
				"",
				"player.onplay = function() {",
				"\tmanager.start();",
				"};",
				"",
				"player.onpause = function() {",
				"\tmanager.stop();",
				"};",
				"",
				"function start ( progress ) {",
				"}",
				"",
				"function end( progress ) { ",
				"\tplayer.setLoop( [ 0, 10 ] );",
				"}",
				"",
				"function update( progress ) {",
				"}"
			]
		],
		[
			"Change Verse",
			[
				"var manager = resources.get( 'audio-manager' );",
				"",
				"function start( progress ) {",
				"",
				"\tvar duration = manager.getDuration();",
				"\tvar currentTime = WebAudio.getContext().currentTime;",
				"\tvar startTime = manager.startTime;",
				"\tvar elapsed = currentTime - startTime;",
				"\tvar reps = Math.floor( elapsed / duration );",
				"\tvar time = startTime + duration * ( reps + 1 );",
				"",
				"\tfor ( var i = 0; i < manager.tracks.length; i++ ) {",
				"\t\tvar track = manager.tracks[ i ];",
				"\t\ttrack.transition( time );",
				"\t}",
				"",
				"}",
				"",
				"function end( progress ){}",
				"",
				"function update( progress ){}"
			]
		],
		[
			"Effect",
			[
				"var dom = resources.get( 'dom' );",
				"",
				"var elem = document.createElement( 'button' );",
				"elem.textContent = 'Next Stage';",
				"elem.onclick = function () {",
				"\tplayer.setLoop( [ 10, 20 ] );",
				"};",
				"",
				"function start( progress ) {",
				"\tplayer.setLoop( [ 0, 10 ] );",
				"\tdom.appendChild( elem );",
				"}",
				"",
				"function end( progress ) {",
				"\tdom.removeChild( elem );",
				"}",
				"",
				"function update( progress ){}"
			]
		]
	],
	"animations": [
		[
			"AudioManager",
			0,
			70,
			0,
			0,
			true
		],
		[
			"Stage 1",
			0,
			10,
			1,
			2,
			true
		],
		[
			"Stage 2",
			10,
			20,
			2,
			1,
			true
		],
		[
			"Stage 3",
			20,
			30,
			1,
			1,
			true
		],
		[
			"Stage 4",
			30,
			40,
			2,
			1,
			true
		],
		[
			"Stage 5",
			40,
			50,
			1,
			1,
			true
		],
		[
			"Stage 6",
			50,
			60,
			2,
			1,
			true
		],
		[
			"Stage 7",
			60,
			70,
			1,
			1,
			true
		]
	]
}
