{
	"config": {},
	"libraries": [
		"../release/third-party/WebAudio.js"
	],
	"includes": [
		[
			"AudioManager",
			[
				"var root = this;",
				"var Clip = WebAudio;",
				"",
				"var intensities = {",
				"\tlow: 'low',",
				"\tmedium: 'medium',",
				"\thigh: 'high',",
				"\ttranscendent: 'transcendent'",
				"};",
				"",
				"var sections = [",
				"\t'beat-up-all-my-cues-for-you',",
				"\t'some-other-way-to-get-to-you',",
				"\t'do-anything-but-upset-you',",
				"\t'what-you-dont-know',",
				"\t'bridge'",
				"];",
				"",
				"sections.ids = {",
				"\t'beat-up-all-my-cues-for-you': 0,",
				"\t'some-other-way-to-get-to-you': 1,",
				"\t'do-anything-but-upset-you': 2,",
				"\t'what-you-dont-know': 3,",
				"\t'bridge': 4",
				"};",
				"",
				"var files = {",
				"\tlow: [ 0, 1, 3, 4 ],",
				"\tmedium: [ 0, 1, 3, 4 ],",
				"\thigh: [ 0, 2, 3, 4 ],",
				"\ttranscendent: [ 2, 4 ]",
				"};",
				"",
				"var complete = function() {",
				"\tcomplete.index++;",
				"\tif ( !complete.isComplete && complete.index >= complete.total ) {",
				"\t\tAudioManager._ready = true;",
				"\t\tfor ( var i = 0; i < AudioManager._callbacks.length; i++ ) {",
				"\t\t\tAudioManager._callbacks[ i ].call( AudioManager );",
				"\t\t}",
				"\t\tAudioManager._callbacks.length = 0;",
				"\t\tcomplete.isComplete = true;",
				"\t}",
				"};",
				"complete.index = 0;",
				"complete.total = 0;",
				"complete.isComplete = false;",
				"",
				"var ua = window.navigator.userAgent;",
				"var isSafari = !!ua.match(/Safari/ig) && !ua.match(/Chrome/ig);",
				"",
				"var formats = {",
				"\tOSX: 'aac',",
				"\tstandard: 'ogg'",
				"};",
				"",
				"var AudioManager = {",
				"",
				"\tfiles: files,",
				"\tintensities: intensities,",
				"\tsections: sections,",
				"",
				"\tcurrent: {",
				"\t\tclip: null",
				"\t},",
				"",
				"\t// Song specific parameters",
				"\tbpm: 90,",
				"\tbars: 4,",
				"\tbeats: 4,",
				"",
				"\t_ready: false,",
				"\t_callbacks: [],",
				"",
				"\tready: function( func ) {",
				"\t\tif ( AudioManager._ready ) {",
				"\t\t\tfunc.call( AudioManager );",
				"\t\t\treturn AudioManager;",
				"\t\t}",
				"\t\tAudioManager._callbacks.push( func );",
				"\t\treturn AudioManager;",
				"\t},",
				"\t",
				"\tbarsToSeconds: function( bars ) {",
				"\t\treturn ( AudioManager.beats * bars ) / ( AudioManager.bpm / 60 );",
				"\t}",
				"",
				"};",
				"",
				"setup();",
				"",
				"function setup() {",
				"",
				"\tfor ( var f in files ) {",
				"",
				"\t\tvar intensity = files[ f ];",
				"",
				"\t\tfor ( var i = 0; i < intensity.length; i++ ) {",
				"",
				"\t\t\tvar sid = intensity[ i ];",
				"\t\t\tvar section = sections[ sid ];",
				"\t\t\tvar url = [",
				"\t\t\t\t'../assets/loops/',",
				"\t\t\t\tf.toUpperCase(),",
				"\t\t\t\t'-',",
				"\t\t\t\tsection,",
				"\t\t\t\t'.',",
				"\t\t\t\tisSafari ? formats.OSX : formats.standard",
				"\t\t\t].join( '' );",
				"",
				"\t\t\tvar clip = new Clip();",
				"\t\t\tclip.onLoad = complete;",
				"\t\t\tclip.src = url;",
				"",
				"\t\t\tclip.section = section;",
				"\t\t\tclip.intensity = f;",
				"",
				"\t\t\tcomplete.total++;",
				"\t\t\tintensity[ section ] = clip;",
				"",
				"\t\t}",
				"",
				"\t}",
				"",
				"}",
				"",
				"resources.set( 'AudioManager', AudioManager );"
			]
		]
	],
	"effects": [
		[
			"Manage Audio",
			[
				"var manager = resources.get( 'AudioManager' );",
				"manager.current.clip = manager.files.low['beat-up-all-my-cues-for-you'];",
				"",
				"function start( progress ) {",
				"",
				"\tif ( manager.current.clip ) {",
				"\t\tplayer.setAudio( manager.current.clip );",
				"\t}",
				"",
				"}",
				"",
				"function end() {",
				"",
				"\tplayer.currentTime = 0;",
				"",
				"}",
				"",
				"function update( progress ) {}"
			]
		],
		[
			"Soundboard",
			[
				"var domElement = resources.get( 'dom' );",
				"var manager = resources.get( 'AudioManager' );",
				"",
				"domElement.innerHTML = '';",
				"",
				"var buttons = [];",
				"",
				"manager.ready( function() {",
				"",
				"\tvar i = 0;",
				"\tfor ( var f in manager.files ) {",
				"\t\tvar intensity = manager.files[ f ];",
				"\t\tfor ( var j = 0; j < intensity.length; j++ ) {",
				"\t\t\tvar sid = intensity[ j ];",
				"\t\t\tvar section = manager.sections[ sid ];",
				"\t\t\tvar clip = intensity[ section ];",
				"\t\t\tvar button = createButton( i, clip );",
				"\t\t\tbuttons.push( button );",
				"\t\t\ti++;",
				"\t\t}",
				"\t}",
				"",
				"} );",
				"",
				"function start(){}",
				"",
				"function end(){}",
				"",
				"function update( progress ) {",
				"",
				"\tfor ( var i = 0; i < buttons.length; i++ ) {",
				"\t\tbuttons[ i ].update();",
				"\t}",
				"",
				"}",
				"",
				"function createButton( index, clip ) {",
				"",
				"\tvar text = clip.src.match( /\\/([a-zA-Z0-9\\-]*)\\./i )[ 1 ];",
				"",
				"\tvar button = document.createElement( 'button' );",
				"\tvar div = document.createElement( 'div' );",
				"\tvar cursor = document.createElement( 'div' );",
				"\tvar p = document.createElement( 'p' );",
				"",
				"\tbutton.setAttribute( 'index', index );",
				"\tbutton.style.padding = 0;",
				"\tbutton.style.margin = 5 + 'px';",
				"\tbutton.style.border = 5 + 'px solid transparent';",
				"\tbutton.style.borderRadius = 2.5 + 'px';",
				"\t",
				"\tdiv.style.position = 'relative';",
				"\tdiv.style.padding = 5 + 'px ' + 8 + 'px';",
				"\t",
				"\tcursor.style.position = 'absolute';",
				"\tcursor.style.top = 0;",
				"\tcursor.style.left = 0;",
				"\tcursor.style.bottom = 0;",
				"\tcursor.style.width = 0 + '%';",
				"\tcursor.style.background = 'rgba( 0, 0, 0, 0.5 )';",
				"",
				"\tp.textContent = text;",
				"\tp.style.position = 'relative';",
				"\tp.style.padding = 0;",
				"\tp.style.margin = 0;",
				"\tp.style.color = 'white';",
				"",
				"\tdiv.appendChild( cursor );",
				"\tdiv.appendChild( p );",
				"\tbutton.appendChild( div );",
				"\tdomElement.appendChild( button );",
				"",
				"\tbutton.addEventListener( 'click', cue, false );",
				"",
				"\tvar result = {",
				"\t\tdomElement: button,",
				"\t\tclip: clip,",
				"\t\tactive: false,",
				"\t\tupdate: function() {",
				"",
				"\t\t\tvar delta, duration, pct;",
				"",
				"\t\t\tif ( !clip.paused ) {",
				"\t\t\t\tduration = clip.duration;",
				"\t\t\t\tpct = clip.currentTime / duration;",
				"\t\t\t\tcursor.style.width = pct * 100 + '%';",
				"\t\t\t} else if ( cursor.style.width !== 0 ) {",
				"\t\t\t\tcursor.style.width = 0;",
				"\t\t\t}",
				"",
				"\t\t\tif ( result.active ) {",
				"\t\t\t\tbutton.style.borderColor = 'rgb( 255, 50, 50 )';",
				"\t\t\t} else if ( button.style.borderColor !== 'transparent' ) {",
				"\t\t\t\tbutton.style.borderColor = 'transparent';",
				"\t\t\t}",
				"",
				"\t\t}",
				"\t};",
				"\t",
				"\treturn result;",
				"}",
				"",
				"function cue( event ) {",
				"",
				"\tvar index = parseInt( this.getAttribute( 'index' ) );",
				"",
				"\tfor ( var i = 0; i < buttons.length; i++ ) {",
				"\t\tvar button = buttons[ i ];",
				"\t\tif ( i === index ) {",
				"\t\t\t// Activate clip",
				"\t\t\tbutton.active = true;",
				"\t\t\tmanager.current.clip = button.clip;",
				"\t\t\tbutton.clip.decode();",
				"\t\t} else {",
				"\t\t\t// Deactivate clip",
				"\t\t\tbutton.active = false;",
				"\t\t}",
				"\t}",
				"",
				"}",
				"",
				"function clerp( t ) {",
				"\treturn 'rgba( 255, 50, 50, ' + t + ')';",
				"}"
			]
		]
	],
	"animations": [
		[
			"Audio",
			0,
			10.6666,
			0,
			0,
			true
		],
		[
			"DOM",
			0,
			10.6666,
			1,
			1,
			true
		]
	]
}
