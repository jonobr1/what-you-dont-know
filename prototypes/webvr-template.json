{
	"config": {},
	"libraries": [
		"https://cdn.rawgit.com/mrdoob/three.js/r92/build/three.js",
		"https://cdn.rawgit.com/davidlyons/THREE.VRController/master/VRController.js",
		"https://cdn.rawgit.com/mrdoob/three.js/r92/examples/js/vr/WebVR.js",
		"https://cdn.rawgit.com/mrdoob/three.js/r92/examples/js/loaders/FBXLoader.js",
		"https://cdnjs.cloudflare.com/ajax/libs/tween.js/17.1.1/Tween.min.js"
	],
	"includes": [
		[
			"Setup",
			[
				"var scene = new THREE.Scene();",
				"",
				"var renderer = new THREE.WebGLRenderer( { antialias: true, preserveDrawingBuffer: true } );",
				"renderer.setClearColor( 0xBBBBBB, 1 );",
				"renderer.setPixelRatio( window.devicePixelRatio );",
				"renderer.setSize( window.innerWidth, window.innerHeight );",
				"",
				"var domElement = resources.get( 'dom' );",
				"domElement.appendChild( renderer.domElement );",
				"",
				"renderer.vr.enabled = true;",
				"domElement.appendChild( WEBVR.createButton( renderer ) );",
				"",
				"var camera = new THREE.PerspectiveCamera( 60, window.innerWidth / window.innerHeight, .01, 100000 );",
				"var camGroup = new THREE.Group();",
				"camGroup.position.set( 0, 1.6, 3 );",
				"",
				"camGroup.add( camera );",
				"scene.add( camGroup );",
				"",
				"var aLight = new THREE.AmbientLight( 0x404040 );",
				"scene.add( aLight );",
				"",
				"var dLight = new THREE.DirectionalLight( 0xffffff, 0.5 );",
				"dLight.position.set( 0, 1, 1 );",
				"scene.add( dLight );",
				"",
				"var gh = new THREE.GridHelper( 2, 10, 0x000000, 0x808080 );",
				"scene.add( gh );",
				"",
				"var fbxLoader = new THREE.FBXLoader();",
				"",
				"// --------------------------------------------------------------",
				"",
				"var sphereGeo = new THREE.SphereBufferGeometry(2, 32, 32);",
				"var sphereMat = new THREE.MeshNormalMaterial();",
				"var sphere = new THREE.Mesh( sphereGeo, sphereMat );",
				"scene.add( sphere );",
				"",
				"// --------------------------------------------------------------",
				"",
				"resources.set( 'scene', scene );",
				"resources.set( 'renderer', renderer );",
				"resources.set( 'camera', camera );",
				"resources.set( 'fbxLoader', fbxLoader );",
				"",
				"window.addEventListener( 'resize', resize, false );",
				"function resize() {",
				"",
				"\tvar rect = domElement.getBoundingClientRect();",
				"\tvar width = rect.width;",
				"\tvar height = rect.height;",
				"",
				"\tcamera.aspect = width / height;",
				"\tcamera.updateProjectionMatrix();",
				"\trenderer.setSize( width, height );",
				"}"
			]
		]
	],
	"effects": [
		[
			"Effect",
			[
				"var scene = resources.get( 'scene', scene );",
				"var renderer = resources.get( 'renderer', renderer );",
				"var camera = resources.get( 'camera', camera );",
				"",
				"var parameters = {",
				"\tvalue: new FRAME.Parameters.Float( 'Value', 1.0 )",
				"};",
				"",
				"function start( progress ){",
				"",
				"}",
				"",
				"function end( progress ){",
				"\tplayer.currentTime = 0;",
				"}",
				"",
				"function update( progress ){",
				"\trenderer.render( scene, camera );",
				"}"
			]
		]
	],
	"animations": [
		[
			"Scene",
			0,
			10.6666,
			0,
			0,
			true
		]
	]
}